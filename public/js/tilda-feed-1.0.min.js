function t_feed_init(e, t) { window.tFeedPosts = {}, t_feed_createObjWithPosts(); var o = $("#rec" + e), a = o.find(".js-feed"), s = $(".t-records").attr("data-tilda-mode"); t.isPublishedPage = "edit" !== s && "preview" !== s, (t.btnText && t.amountOfPosts || t.btnAllPosts.text) && a.append(t_feed_drawBtnsContainer(t)), "y" == window.lazy && t_lazyload_update(), setTimeout(function () { o.find(".js-feed-preloader") && o.find(".js-feed-preloader").removeClass("t-feed__post-preloader__container_hidden") }, 1500), t_feed_showLoadersForPostsList(e), 0 < window.location.hash.length ? t_feed_loadPosts(e, t, 1, !1, t_feed_loadPartPosts) : t_feed_loadPosts(e, t, 1, !1), t_feed_showMore(e, t), "col" == a.attr("data-feed-grid-type") && ($(window).bind("resize", t_throttle(function () { t_feed_unifyColHeights(e, t) }, 200)), $(".t-feed").bind("displayChanged", function () { t_feed_unifyColHeights(e, t) })), window.onpopstate = function () { $("body").hasClass("t-body_popupshowed") && t_feed_closePopup(window.location.href) } } function t_feed_loadPartPosts(e, t, o, a) { var s = $("#rec" + e); s.find(".js-feed-parts-switcher").each(function () { var e = decodeURI(window.location.hash).split("/"); if ($(this).attr("data-feedpart-title") == e[e.length - 1]) { var o = $(this).attr("data-feedpart-uid"); t.feeduid = t.feeduid.split("-")[0] + "-" + o, s.find(".t-active").removeClass("t-active"), $(this).addClass("t-active") } }), window.tFeedPosts[e].switcher = !0, window.tFeedPosts[e].count = 0, t_feed_loadPosts(e, t, o, a), $(window).load(function () { -1 != window.location.hash.indexOf("#!/tfeeds") && t_feed_scrollToFeed() }) } function t_feed_scrollToFeed() { return; var e = void 0 !== $(".js-feed").offset() ? $(".js-feed").offset().top - 100 : 0; $("html, body").animate({ scrollTop: e }, 10) } function t_feed_createObjWithPosts() { $(".js-feed").each(function () { var e = $(this).attr("data-feed-recid"); window.tFeedPosts[e] = {}, void 0 !== window.tFeedPosts[e] && (window.tFeedPosts[e].count = 0, window.tFeedPosts[e].switcher = !1) }) } function t_feed_loadPosts(e, t, o, a, s) { return; var r = $("#rec" + e), d = !o || 1 === parseInt(o), i = t_feed_createDataObjForRequest(e, t, d, o); t.isPublishedPage || (i.projectid = $(".t-records").attr("data-tilda-project-id")), r.find(".js-feed-btn-show-more").css({ "pointer-events": "none", opacity: "0.7" }); var p = Date.now(); $.ajax({ type: "POST", contentType: "application/json", url: "http://silver-service.com.ua/www/hs/query/news/", crossDomain: !0, headers: { "Access-Control-Allow-Origin": "*", Authorization: "" }, success: function (i) { if ("" !== i) { try { var p = JSON.parse(i) } catch (p) { r.find(".js-feed-preloader").remove(), r.find(".js-feed-container").append(t_feed_drawErrorBox(t, i)) } "object" == typeof p && ("error" in JSON.parse(i) && setTimeout(function () { r.find(".js-feed-preloader").remove(), r.find(".js-feed-container").append(t_feed_drawErrorBox(t, JSON.parse(i).error)) }, 500), r.find(".js-feed").attr("data-feed-uid", p.feeduid), window.tFeedPosts[e].lang = p.feedlang, clearTimeout(r.attr("data-preloader-timeout")), r.find(".js-feed-preloader") && r.find(".js-feed-preloader").remove(), d && r.find(".js-feed-container").html(""), void 0 !== p.posts && (t_feed_generatePosts(p, p.posts, e, t, a), 0 !== p.posts.length && p.parts && 1 < p.parts.length && 0 === r.find(".js-feed-parts-switcher").length && !t.hideFeedParts && t_feed_addFeedParts(e, t, p.parts, p.feeduid)), void 0 !== s && s(e, t, o, a), r.find(".t-feed__post").removeClass("t-feed__post_hidden"), r.find(".js-feed-btn-show-more").css({ "pointer-events": "inherit", opacity: "1" }), t_feed_displayButtons(e, p.nextslice, p.posts.length)) } }, error: function (e) { var t = Date.now() - p; 0 == e.status && t < 100 && alert("Request error (get posts). Please check internet connection...") }, timeout: 25e3 }) } function t_feed_createDataObjForRequest(e, t, o, a) { var s = t.amountOfPosts, r = Date.now(), d = t.dateFilter, i = { feeduid: t.feeduid, recid: e, c: r, size: s, slice: a, sort: { date: t.reverse }, filters: { date: {} } }; return "all" === d ? i.filters.date = "" : i.filters.date[d] = "now", a && (i.slice = a), o && (i.getparts = !0), i } function t_feed_displayButtons(e, t, o) { var a = $("#rec" + e); null !== a.find(".t-feed__buttons-wrapper") && (a.find(".t-feed__buttons-wrapper").removeClass("t-feed__buttons-wrapper_hidden"), void 0 === t ? a.find(".js-feed-btn-show-more").hide() : a.find(".js-feed-btn-show-more").show(), 0 == o ? a.find(".js-feed-btn-show-all-posts").hide() : a.find(".js-feed-btn-show-all-posts").show()) } function t_feed_generatePosts(e, t, o, a, s) { var r = $("#rec" + o), d = r.find(".js-feed-container"), i = r.find(".js-feed").attr("data-feed-grid-type"), p = ""; if (void 0 === t || 0 !== t.length) { if (void 0 !== t) for (var n = 0; n < t.length; n++) { var _ = t[n]; "col" == i && (p += "" + t_feed_drawSeparator(o, a)), p += t_feed_drawWholePost(o, _, a, s), window.tFeedPosts[o].count = window.tFeedPosts[o].count + 1, window.tFeedPosts[o][_.uid] = _ } if (d.append(p), t_feed_initPopup(o, e, window.tFeedPosts, a), t_feed_unifyColHeights(o, a), "y" == window.lazy && t_lazyload_update(), !a.previewmode) try { addEditFieldEvents_new(o) } catch (e) { console.log(e) } } else r.find(".js-feed-container").append(t_feed_drawEmptyMessage(a, o)) } function t_feed_drawSeparator(e, t) { var o = ""; return 0 < window.tFeedPosts[e].count && window.tFeedPosts[e].count % t.blocksInRow == 0 && (o += '<div class="t-clear t-feed__grid-separator" style="margin-bottom:' + t.vindent + '"></div>'), o } function t_feed_showMore(e, t) { var o = $("#rec" + e), a = o.find(".js-feed-container"), s = (parseInt(a.attr("data-feed-show-count")), 1); null !== o.find(".js-feed-btn-show-more") && o.find(".js-feed-btn-show-more").on("click", function (o) { o.preventDefault(), window.tFeedPosts[e].switcher ? s = 2 : s++, window.tFeedPosts[e].switcher = !1, t_feed_loadPosts(e, t, s, !0) }) } function t_feed_initFeedParts(e, t) { var o = $("#rec" + e); o.find(".js-feed-parts-switcher").on("click", function () { var a = $(this).attr("data-feedpart-uid"); o.find(".t-active").removeClass("t-active"), $(this).addClass("t-active"), t.feeduid = t.feeduid.split("-")[0] + "-" + a, window.tFeedPosts[e].switcher = !0, window.tFeedPosts[e].count = 0, o.find(".t-feed__parts-switch-btn-all").hasClass("t-feed__parts-switch-btn_hide") && !t.showPartAll && o.find(".t-feed__parts-switch-btn-all").removeClass("t-feed__parts-switch-btn_hide"), t_feed_showLoadersForPostsList(e), t_feed_loadPosts(e, t, 1, !0), $(this).hasClass("t-feed__parts-switch-btn-all") && history.replaceState({}, null, window.location.href.split("#")[0]) }) } function t_feed_showLoadersForPostsList(e) { var t = $("#rec" + e); t.find(".t-feed__post").addClass("t-feed__post_hidden"), t.find(".t-feed__show-more-btn").addClass("t-feed__show-more-btn_hidden"); var o = setTimeout(function () { t.find(".js-feed-preloader").css({ display: "", opacity: "0" }).animate({ opacity: 1 }, 200) }, 1e3); t.data("preloader-timeout", o) } function t_feed_drawWholePost(e, t, o, a) { var s = $("#rec" + e), r = s.find(".js-feed").attr("data-feed-grid-type"), d = s.find(".js-feed").attr("data-feed-col-modification"), i = t.directlink ? t.directlink : "#postpopup", p = "_blank" == t.directtarget ? 'target="_blank"' : "", n = "left" === o.align ? "t-align_left" : "t-align_center", _ = o.itemsAnim && o.previewmode && !a ? "t-animate" : "", l = o.itemsAnim ? 'data-animate-style="' + o.itemsAnim + '" data-animate-chain="yes"' : "", f = "", c = o.previewmode ? '<a href="' + i + '" ' + p + ' class="js-feed-post-link">' : "", u = o.previewmode ? "</a>" : ""; "row" == r || "row-bigimg" == r ? f = "t-col t-col_" + o.colClass + " t-prefix_" + o.prefixClass : "col" == r && (f = o.blocksClass + " " + n); var w = ""; return w += '<div class="js-feed-post t-feed__post t-feed__post_hidden t-item ' + f + " " + _ + '" ' + l + ' data-post-uid="' + t.uid + '">', "row" != r || o.separator.hideSeparator || (w += "" + t_feed_drawPostSeparatorLine(o)), w += c, "row" === r ? w += "" + t_feed_drawRowType(t, o, e) : "col" === r ? w += "" + t_feed_drawColType(t, o, d, e) : "row-bigimg" === r && (w += "" + t_feed_drawRowBigImgType(t, o, e)), (w += u) + "</div>" } function t_feed_drawRowBigImgType(e, t, o) { var a; a = "aftertitle" == t.imagePos && "aftertitle" != t.datePos && "aftertitle" != t.partsPos; var s = ""; return s += '<div class="t-feed__row-bigimg-grid__post-wrapper">', "video" === e.mediatype && -1 != e.mediadata.indexOf("vimeo") && "" === e.thumb && (imageUrl = "https://static.tildacdn.com/ffb6456b-781b-40e8-9517-ffb5225e8bcd/imgfish.jpg"), "beforetitle" == t.imagePos && (s += "" + t_feed_drawImageInRowBig(t, e, "beforetitle", o)), (t.showDate && "beforetitle" == t.datePos || t.showParts && 0 < e.postparts.length && "beforetitle" == t.partsPos) && (s += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "col", o)), s += "" + t_feed_drawTitle(t, e, "medium", a), (t.showDate && "aftertitle" == t.datePos || t.showParts && 0 < e.postparts.length && "aftertitle" == t.partsPos) && (s += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "col", o)), "aftertitle" == t.imagePos && (s += "" + t_feed_drawImageInRowBig(t, e, "aftertitle", o)), t.showShortDescr && (s += '    <div class="t-feed__textwrapper">', s += "" + t_feed_drawDescr(t, e, "medium"), s += "    </div>"), (t.showDate && "afterdescr" == t.datePos || t.showParts && 0 < e.postparts.length && "afterdescr" == t.partsPos) && (s += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "col", o)), "afterdescr" == t.imagePos && (s += "" + t_feed_drawImageInRowBig(t, e, "afterdescr", o)), (s += "  </div>") + "</div>" } function t_feed_drawRowType(e, t, o) { var a = e.thumb ? e.thumb : e.image, s = ""; return s += '<div class="t-feed__row-grid__post-wrapper' + (t.separator.hideSeparator ? " t-feed__row-grid__post-wrapper_padd-sm" : "") + '">', "video" === e.mediatype && -1 != e.mediadata.indexOf("vimeo") && "" === e.thumb && (a = "https://static.tildacdn.com/ffb6456b-781b-40e8-9517-ffb5225e8bcd/imgfish.jpg"), "" === e.thumb && "" === e.image && "video" !== e.mediatype || !t.showImage || (s += '<div class="t-feed__post-imgwrapper">', s += '<div class="js-feed-post-image t-feed__post-bgimg t-bgimg" data-original="' + a + '" style="background-image:url(' + t_feed_getLazyUrl(t, a) + ");width:" + t.imageWidth + ";height:" + t.imageHeight + '" bgimgfield="fe_img__' + e.uid + '"></div>', s += "</div>"), s += '    <div class="t-feed__textwrapper">', (t.showDate && "beforetitle" == t.datePosPs || t.showParts && 0 < e.postparts.length && "beforetitle" == t.partsPosPs) && (s += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "row", o)), s += "" + t_feed_drawTitle(t, e, "small", !1), (t.showDate && "aftertitle" == t.datePosPs || t.showParts && 0 < e.postparts.length && "aftertitle" == t.partsPosPs) && (s += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "row", o)), t.showShortDescr && (s += "" + t_feed_drawDescr(t, e, "small")), (t.showDate && "afterdescr" == t.datePosPs || t.showParts && 0 < e.postparts.length && "afterdescr" == t.partsPosPs) && (s += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "row", o)), s += "    </div>", (s += "  </div>") + "</div>" } function t_feed_drawColType(e, t, o, a) { var s = "bg" === o, r = s ? "t-feed__col-grid__content" : "", d = s && "afterdescr" == t.imagePosPs ? "t-feed__col-grid__content_paddingtop" : "", i = s ? t.colWithBg.paddingSize : "", p = s || "afterdescr" != t.imagePosPs ? "" : "t-feed__col-grid__content_marginbottom", n = ""; return n += '<div class="t-feed__col-grid__post-wrapper" ' + (s ? 'style="' + t_feed_addStyleToColWithBg(t) + '"' : "") + ">", "beforetitle" != t.imagePosPs && t.imagePosPs || (n += "" + t_feed_drawImage(t, e, "beforetitle", a, s)), n += '<div class="t-feed__col-grid__wrapper ' + r + " " + d + " " + p + " " + i + '">', (t.showDate && "beforetitle" == t.datePos || t.showParts && 0 < e.postparts.length && "beforetitle" == t.partsPos) && (n += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "col", a)), n += '  <div class="t-feed__textwrapper">', n += "" + t_feed_drawTitle(t, e, "small", !1), (t.showDate && "aftertitle" == t.datePos || t.showParts && 0 < e.postparts.length && "aftertitle" == t.partsPos) && (n += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "col", a)), t.showShortDescr && (n += "" + t_feed_drawDescr(t, e, "small")), n += "  </div>", (t.showDate && "afterdescr" == t.datePos || t.showParts && 0 < e.postparts.length && "afterdescr" == t.partsPos) && (n += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "col", a)), t.btnReadMore && (n += "" + t_feed_drawReadMoreBtn(t)), n += "</div>", "afterdescr" == t.imagePosPs && (n += "" + t_feed_drawImage(t, e, "afterdescr", a, s)), n + "</div>" } function t_feed_addStyleToColWithBg(e) { var t = ""; return t += e.colWithBg.background ? "background-color:" + e.colWithBg.background + ";" : "", t += e.colWithBg.borderRadius ? "border-radius:" + e.colWithBg.borderRadius + ";" : "", (e.colWithBg.shadowSize || e.colWithBg.shadowOpacity) && (t += "box-shadow: 0px 0px " + (e.colWithBg.shadowSize ? e.colWithBg.shadowSize : "20px") + " 0px rgba(0, 0, 0, " + (e.colWithBg.shadowOpacity ? "0." + e.colWithBg.shadowOpacity : "0.3") + ");"), t } function t_feed_unifyColHeights(e, t) { var o = $("#rec" + e).find(".t-feed__post"), a = t_feed_getBlocksInRowHeight(t, o); if ($(window).width() <= 480 && !t.isHorizOnMob) o.css("height", "auto"); else for (var s = 0; s < o.length; s += a) { var r = 0, d = o.slice(s, s + a).find(".t-feed__col-grid__wrapper"); d.each(function () { var e = parseInt($(this).css("padding-top")), t = parseInt($(this).css("padding-bottom")), o = 0, a = 0, s = 0; null != $(this).find(".t-feed__post-parts-date-row_beforetitle").outerHeight() && (o = $(this).find(".t-feed__post-parts-date-row_beforetitle").outerHeight(!0)), null != $(this).find(".t-feed__post-parts-date-row_afterdescr").outerHeight() && (a = $(this).find(".t-feed__post-parts-date-row_afterdescr").outerHeight(!0)), null != $(this).find(".t-feed__button-readmore").outerHeight() && (s = $(this).find(".t-feed__button-readmore").outerHeight(!0)); var d = o + a + $(this).find(".t-feed__textwrapper").outerHeight() + e + t + s; r < d && (r = d) }), d.css("height", r) } } function t_feed_getBlocksInRowHeight(e, t) { return $(window).width() <= 960 && e.isHorizOnMob ? t.length : $(window).width() <= 960 ? 1 : parseInt(e.blocksInRow) } function t_feed_drawImageInRowBig(e, t, o, a) { var s = t.thumb ? t.thumb : t.image, r = e.imageRatio + "%", d = ""; return "" === t.thumb && "" === t.image && "video" !== t.mediatype || !e.showImage || (d += '<div class="t-feed__post-imgwrapper t-feed__post-imgwrapper_' + o + '" style="padding-bottom:' + r + ';">', (e.showDate && "onimage" == e.datePos || e.showParts && "onimage" == e.partsPos) && (d += "" + t_feed_drawDateAndParts(e, t, "onimage", "col", a)), d += '<div class="t-feed__post-bgimg t-bgimg" bgimgfield="fe_img__' + t.uid + '" data-original="' + s + '" style="background-image:url(' + t_feed_getLazyUrl(e, s) + ');">', d += "</div>", d += "</div>"), d } function t_feed_drawImage(e, t, o, a, s) { var r = e.imageRatio ? e.imageRatio + "%" : "66%", d = s && e.colWithBg.borderRadius ? "border-radius:" + e.colWithBg.borderRadius + " " + e.colWithBg.borderRadius + " 0 0;" : "", i = 'style="padding-bottom:' + r + ";" + d + '"', p = e.isHorizOnMob && e.hasOriginalAspectRatio ? "t-feed__post-imgwrapper_mobile-nopadding" : "", n = ""; if (("" !== t.thumb || "" !== t.image || "video" === t.mediatype) && e.showImage) { var _ = t.thumb ? t.thumb : t.image; "video" === t.mediatype && -1 != t.mediadata.indexOf("vimeo") && "" === t.thumb && (_ = "https://static.tildacdn.com/ffb6456b-781b-40e8-9517-ffb5225e8bcd/imgfish.jpg"), n += '<div class="t-feed__post-imgwrapper t-feed__post-imgwrapper_' + o + " " + p + '" ' + i + ">", (e.showDate && "onimage" == e.datePos || e.showParts && "onimage" == e.partsPos) && (n += "" + t_feed_drawDateAndParts(e, t, "onimage", "col", a)), e.hasOriginalAspectRatio ? n += "<img " + t_feed_getLazySrc(e, _) + ' class="t-feed__post-img t-img js-feed-img" imgfield="fe_img__' + t.uid + '" />' : (n += '<div class="t-feed__post-bgimg t-bgimg" bgimgfield="fe_img__' + t.uid + '" data-original="' + _ + '" style="background-image:url(' + t_feed_getLazyUrl(e, _) + ");" + d + '">', n += "</div>"), n += "</div>" } return n } function t_feed_drawTitle(e, t, o, a) { var s = a ? "t-feed__post-title_margin" : "", r = "t-name"; "medium" == o && (r = "t-heading"); var d = ""; return 4 == e.blocksInRow ? d += "t-name_xs" : 2 != e.blocksInRow && e.blocksInRow ? d += "t-name_md" : d += "t-name_xl", "medium" == o && (d = "t-heading_lg"), "" + '<div class="js-feed-post-title t-feed__post-title ' + s + " " + r + " " + d + '" field="fe_title__' + t.uid + '" style="' + e.typo.title + '" data-redactor-toolbar="no">' + t.title + "</div>" } function t_feed_drawDescr(e, t, o) { var a = "xxs"; "medium" == o && (a = "sm"); var s = ""; return "" != t.descr && (s += '<div class="js-feed-post-descr t-feed__post-descr t-descr t-descr_' + a + '" field="fe_descr__' + t.uid + '" style="' + e.typo.descr + '" data-redactor-toolbar="no">' + t_feed_cropShortDescr(t, e) + "</div>"), s } function t_feed_drawDateAndParts(e, t, o, a, s) { var r = "onimage" === o, d = "afterdescr" === o || "beforetitle" === o || "aftertitle" === o, i = "col" === a ? e.datePos : e.datePosPs, p = "col" === a ? e.partsPos : e.partsPosPs, n = '<span class="js-feed-post-date t-feed__post-date t-uptitle t-uptitle_xs" style="' + e.typo.subtitle + '">' + t_feed_formateDate(t.date, e, s) + "</span>", _ = r ? "</div>" : "", l = r ? '<div class="t-feed__post-label">' : "", f = r ? "</div>" : "", c = d ? "</div>" : "", u = ""; return u += d ? '<div class="t-feed__post-parts-date-row t-feed__post-parts-date-row_' + o + '">' : "", u += r ? '<div class="t-feed__post-label-wrapper">' : "", e.showDate && i == o && (u += l, u += n, u += f), 0 < t.postparts.length && e.showParts && p == o && (u += l, u += "" + t_feed_drawParts(e, t), u += f), (u += _) + c } function t_feed_drawParts(e, t) { var o = e.typo.subtitle ? 'style="' + e.typo.subtitle + '"' : "", a = ""; return t.postparts.forEach(function (e) { "" != e && (a += '<span class="t-feed__post-tag t-uptitle t-uptitle_xs" ' + o + ">" + e.parttitle + "</span>") }), a } function t_feed_drawReadMoreBtn(e) { var t = e.btnTextColor ? 'style="color:' + e.btnTextColor + ';"' : "", o = "sm" == e.btnSize ? "xs" : "sm", a = ""; return a += '<div class="t-feed__button-readmore ' + ("text" === e.btnType ? "t-feed__button-readmore_text" : "") + '">', "text" === e.btnType ? a += '  <div class="t-btntext" ' + t + ">" + e.btnReadMore + "</div>" : (a += '  <div class="t-btn t-btn_' + o + '" style="' + e.btnStyle + '">', a += '    <div class="t-feed__button-container">', a += "      <span>" + e.btnReadMore + "</span>", a += "    </div>", a += "  </div>"), a + "</div>" } function t_feed_drawBtnsContainer(e) { var t = ""; return t += '<div class="t-feed__buttons-wrapper t-feed__buttons-wrapper_hidden t-container">', e.btnText && e.amountOfPosts && (t += "" + t_feed_drawShowMoreBtn(e)), e.btnAllPosts.text && (t += "" + t_feed_drawShowAllPostsBtn(e)), t + "</div>" } function t_feed_drawShowMoreBtn(e) { var t = ""; return e.btnText && (t += '<div class="t-feed__button-wrapper">', t += '  <a href="" class="js-feed-btn-show-more t-feed__showmore-btn t-btn" style="' + e.bbtnStyle + '">', t += '    <div class="t-feed__button-container">', t += "      <span>" + e.btnText + "</span>", t += "    </div>", t += "  </a>", t += "</div>"), t } function t_feed_drawShowAllPostsBtn(e) { var t = e.btnAllPosts.target ? 'target="_blank"' : "", o = ""; return o += '<div class="t-feed__button-wrapper">', o += '  <a href="' + e.btnAllPosts.link + '" class="js-feed-btn-show-all-posts t-feed__showallpost-btn t-btn" ' + t + ' style="' + e.bbtnStyle + '">', o += '    <div class="t-feed__button-container">', o += "      <span>" + e.btnAllPosts.text + "</span>", o += "    </div>", (o += "  </a>") + "</div>" } function t_feed_addFeedParts(e, t, o, a) { var s = $("#rec" + e).find(".js-feed"); t.feedPartsArr = o; var r = t_feed_drawFeedPartsControl(t, a, e); s.find(".js-feed-parts-select-container").prepend(r), t_feed_initFeedParts(e, t) } function t_feed_drawFeedPartsControl(e, t, o) { var a = ""; void 0 !== e.parts_opts && (a = e.parts_opts.partsBgColor || e.parts_opts.partsBorderSize || e.parts_opts.partsBorderColor ? "t-feed__parts-switch-btn_bg" : ""); var s = ""; void 0 !== e.parts_opts && (s = e.parts_opts.align && "left" === e.parts_opts.align ? "t-align_left" : "t-align_center"); var r = ""; r += '<div class="t-feed__parts-switch-wrapper ' + s + '">', r += '<div class="js-feed-parts-switcher t-feed__parts-switch-btn ' + a + " t-feed__parts-switch-btn-all t-name t-name_xs t-menu__link-item t-active" + (e.showPartAll ? "" : " t-feed__parts-switch-btn_hide") + '" data-feedpart-title="" data-feedpart-uid="' + e.feeduid + '">', r += "    <span>", r += "" + t_feed_getDictionary("all", o), r += "    </span>", r += "</div>"; for (var d = 0; d < e.feedPartsArr.length; d++) { var i = e.feedPartsArr[d]; r += '<div class="js-feed-parts-switcher t-feed__parts-switch-btn ' + a + ' t-name t-name_xs t-menu__link-item" data-feedpart-title="' + i.title + '" data-feedpart-uid="' + i.uid + '">', r += '<a href="#!/tfeeds/' + t + "/c/" + i.title + '">', r += "" + i.title, r += "</a>", r += "</div>" } return r + "</div>" } function t_feed_getLazyUrl(e, t) { if (!e.isPublishedPage || "y" !== window.lazy) return t; if (-1 === t.indexOf("static.tildacdn.com")) return t; var o = t.split("/"); return o.splice(t.split("/").length - 1, 0, "-/resizeb/x20"), o.join("/") } function t_feed_getLazySrc(e, t) { if (!e.isPublishedPage || "y" !== window.lazy) return 'src="' + t + '"'; var o = t.split("/"); return o.splice(t.split("/").length - 1, 0, "-/empty"), 'src="' + o.join("/") + '" data-original="' + t + '"' } function t_feed_drawPostSeparatorLine(e) { var t = "", o = ""; return o += e.separator.height ? "height:" + e.separator.height + ";" : "", o += e.separator.color ? "background-color:" + e.separator.color + ";" : "", t + '<div class="t-feed__post__line-separator" ' + (o = (o += e.separator.opacity ? "opacity:" + e.separator.opacity / 100 + ";" : "") ? 'style="' + o + '"' : "") + "></div>" } function t_feed_cropShortDescr(e, t) { var o = e.descr; return "" != t.amountOfSymbols && (o = e.descr.substr(0, t.amountOfSymbols), e.descr.length > t.amountOfSymbols && (o += " ...")), o } function t_feed_initPopup(e, t, o, a) { var s = $("#rec" + e), r = s.find(".js-feed"); s.find('[href^="#postpopup"]').on("click", function (s) { s.preventDefault(); var d = $(this).parents(".js-feed-post").attr("data-post-uid"), i = o[e][d]; if (r.append(t_feed_drawWholePostPopup(t, i, a, d, e)), "all" != a.popup_opts.showRelevants && "cc" != a.popup_opts.showRelevants || t_feed_addRelevantsPosts(e, a, o[e][d], d), setTimeout(function () { t_feed_breakText(), a.popup_opts.zoom && t_feed_addZoom() }, 100), t_feed_showPopup(e), void 0 !== i.needGetPost) { for (var p = "", n = 0; n < 20; n++)p += '<div class="t-feed__post-popup__text-loader"></div>'; $(".js-feed-post-text").html(p); var _ = "https://feeds.tildacdn.com/api/getpost?postuid=" + d, l = Date.now(); $.ajax({ type: "GET", url: _, data: e, dataType: "text", success: function (e) { if ("" !== e && "object" == typeof JSON.parse(e)) { var t = JSON.parse(e).post.text; $(".js-feed-post-text").html(t), t_feed_breakText(), a.popup_opts.zoom && t_feed_addZoom() } }, error: function (e) { var t = Date.now() - l; 0 == e.status && t < 100 && alert("Request error (get posts). Please check internet connection...") }, timeout: 25e3 }) } "gallery" == i.mediatype && "" != i.mediadata && 0 < JSON.parse(i.mediadata).length && (t_feed_setGalleryImageHeight(e), "undefined" != typeof t_sldsInit && t_sldsInit(e), "undefined" != typeof t_slds_UpdateSliderHeight && t_slds_UpdateSliderHeight(e), "undefined" != typeof t_slds_UpdateSliderArrowsHeight && t_slds_UpdateSliderArrowsHeight(e)), a.isPublishedPage && t_feed_changeURL(i) }); var d = window.location.href; $("body").on("click", ".js-feed-popup-close", function () { t_feed_closePopup(d) }), $(document).keydown(function (e) { 27 == e.keyCode && t_feed_closePopup(d) }) } function t_feed_breakText() { $(".js-feed-post-text a").each(function () { $(this).width() > $(".js-feed-post-text").width() && $(this).css("overflow-wrap", "break-word") }) } function t_feed_addZoom() { $(".js-feed-post-text img").each(function () { var e = $(this); e.addClass("t-zoomable"), e.attr("data-zoomable", "yes"), e.attr("data-img-zoom-url", $(this).attr("src")) }), 0 == $(".t-zoomer__wrapper").length && t_initZoom() } function t_feed_showPopup(e) { var t = $("#rec" + e), o = t.find(".t-feed__post-popup.t-popup"), a = o.find(".t-feed__post-popup__arrow-top"); o.show(), t.find(".t-feed__post-popup.t-popup").addClass("t-popup_show"), setTimeout(function () { t.find(".t-feed__post-popup.t-popup").find(".t-popup__container").removeClass("t-feed__post-popup__container_loading") }, 300), setTimeout(function () { o.find(".t-popup__container").addClass("t-popup__container-animated"), "y" == window.lazy && t_lazyload_update() }, 50), $("body").addClass("t-body_popupshowed"), t_feed_getCountOfViews(o), o.scroll(function () { t_feed_addPostPopupArrowTop($(this), a) }), a.on("click", function () { o.animate({ scrollTop: 0 }, 300) }) } function t_feed_addPostPopupArrowTop(e, t) { var o = t.hasClass("t-feed__post-popup__arrow-top_show"); 300 < e.scrollTop() ? o || t.addClass("t-feed__post-popup__arrow-top_show") : o && t.removeClass("t-feed__post-popup__arrow-top_show") } function t_feed_getCountOfViews(e) { setTimeout(function () { $.ajax({ type: "GET", url: "https://feeds.tildacdn.com/api/setpostviewed/", data: { postuid: e.attr("data-feed-popup-postuid") }, dataType: "text", success: function (e) { }, error: function (e) { console.log(e) } }) }, 3e3) } function t_feed_closePopup(e) { $("body").removeClass("t-body_popupshowed"), $(".t-feed__post-popup.t-popup").removeClass("t-popup_show"); var t = e.indexOf("/tpost/"); /iPhone|iPad|iPod/i.test(navigator.userAgent) && t < 0 && (t = e.indexOf("/tpost/")) < 0 && (t = e.indexOf("%2Ftpost%2F")), setTimeout(function () { $(".t-feed__post-popup.t-popup").scrollTop(0), $(".t-feed__post-popup.t-popup").not(".t-popup_show").remove(), window.history.pushState({}, null, e) }, 300), -1 != e.indexOf("#!") && t_feed_scrollToFeed() } function t_feed_changeURL(e) { var t = window.location.href, o = window.location.protocol + "//" + window.location.hostname + "/tpost" + e.url.split("/tpost")[1]; t.indexOf("/tpost/") < 0 && t.indexOf("/tpost/") < 0 && t.indexOf("%2Ftpost%2F") < 0 && void 0 !== history.pushState && window.history.pushState({}, null, o) } function t_feed_drawWholePostPopup(e, t, o, a, s) { var r = o.popup_opts.popupStat ? 'data-track-popup="' + o.popup_opts.popupStat + '"' : "", d = o.popup_opts.overlayBgColorRgba ? 'style="background-color:' + o.popup_opts.overlayBgColorRgba + '"' : "", i = o.popup_opts.inTwoColumns ? "" : '<div class="t-feed__post-popup__content t-col t-col_8">', p = o.popup_opts.inTwoColumns ? "" : "</div>", n = o.popup_opts.inTwoColumns ? '<div class="t-feed__post-popup__content t-feed__post-popup__content_half t-feed__post-popup__content-col t-col t-col_6">' : "", _ = o.popup_opts.inTwoColumns ? "</div>" : "", l = ""; return l += '<div class="t-feed__post-popup t-popup" data-feed-popup-feeduid="' + e.feeduid + '" data-feed-popup-postuid="' + a + '" ' + r + " " + d + ">", l += '<div class="t-feed__post-popup__close-wrapper t-feed__post-popup__close-wrapper_loading" ' + d + ">", l += "" + t_feed_drawPostPopupCloseIcon(o), l += "" + t_feed_drawPopupTitle(e, o), l += "</div>", l += '<div class="t-feed__post-popup__container t-feed__post-popup__container_loading t-container t-popup__container t-popup__container-static t-popup__container-animated">', l += '<div class="t-feed__post-popup__content-wrapper">', l += i, o.popup_opts.inTwoColumns || ("aftertitle" == o.popup_opts.imagePos ? (l += "" + t_feed_addPostPopupHeading(o, t, s), l += "" + t_feed_drawPostPopupCover("aftertitle", o, t)) : (l += "" + t_feed_drawPostPopupCover("beforetitle", o, t), l += "" + t_feed_addPostPopupHeading(o, t, s))), o.popup_opts.inTwoColumns && (l += n, l += "" + t_feed_drawPostPopupCover("beforetitle", o, t), l += _), l += n, o.popup_opts.inTwoColumns && (l += "" + t_feed_addPostPopupHeading(o, t, s)), l += "" + t_feed_drawPostPopupText(o, t), t.authorname && (l += "" + t_feed_drawPostPopupAuthor(o, t)), l += "" + t_feed_drawPostPopupDateAndParts("aftertext", o, t, s), l += _, l += p, l += "</div>", "" != o.popup_opts.showRelevants && (l += '<div class="js-feed-relevants t-feed__post-popup__relevants"></div>'), l += "</div>", void 0 !== o.arrowtop_opts && o.arrowtop_opts.isShow && (l += "" + t_feed_drawPostPopupArrowTop(o)), l + "</div>" } function t_feed_addPostPopupHeading(e, t, o) { var a = ""; return a += "" + t_feed_drawPostPopupDateAndParts("beforetitle", e, t, o), (a += "" + t_feed_drawPostPopupTitle(e, t)) + "" + t_feed_drawPostPopupDateAndParts("aftertitle", e, t, o) } function t_feed_drawPostPopupDateAndParts(e, t, o, a) { var s = "", r = t.popup_opts.subtitleColor ? 'style="color:' + t.popup_opts.subtitleColor + '"' : ""; o.postparts.forEach(function (e) { s += '<a href="' + e.parturl + '" class="t-feed__post-popup__tag"><span class="t-uptitle t-uptitle_xs" ' + r + ">" + e.parttitle + "</span></a>" }); var d = ""; return (t.popup_opts.datePos == e && "" != o.date || t.popup_opts.partsPos == e && 0 < o.postparts.length) && (d += '<div class="t-feed__post-popup__date-parts-wrapper t-feed__post-popup__date-parts-wrapper_' + e + '">', t.popup_opts.datePos == e && (d += "" + t_feed_drawPostPopupDate(t, o, a)), t.popup_opts.partsPos == e && 0 < o.postparts.length && (d += s), d += "</div>"), d } function t_feed_drawPostPopupCloseIcon(e) { var t = ""; return t += '<div class="js-feed-popup-close t-popup__close">', t += '    <div class="t-popup__close-wrapper">', t += '        <svg class="t-popup__close-icon" width="11" height="20" viewBox="0 0 11 20" fill="none" xmlns="http://www.w3.org/2000/svg">', t += '            <path d="M1 1L10 10L1 19" stroke="' + (e.popup_opts.iconColor ? e.popup_opts.iconColor : "#000000") + '" stroke-width="2"/>', t += "        </svg>", (t += "    </div>") + "</div>" } function t_feed_drawPopupTitle(e, t) { var o = t.popup_opts.closeText ? t.popup_opts.closeText : e.feedtitle, a = ""; t.popup_opts.iconColor && (a = 'style="color:' + t.popup_opts.iconColor + '"'); var s = ""; return s += '<div class="js-feed-popup-close t-feed__post-popup__close-text-wrapper">', (s += '<div class="js-feed-popup-title t-feed__post-popup__close-text t-descr t-descr_xxs" ' + a + ">" + o + "</div>") + "</div>" } function t_feed_drawPostPopupCover(e, t, o) { var a = t.popup_opts.zoom ? " t-zoomable" : "", s = t.popup_opts.zoom ? ' data-zoomable="yes" data-img-zoom-url="' + o.mediadata + '"' : "", r = ""; return "image" == o.mediatype && o.mediadata && (r += '<div id="feed-cover" class="r t-feed__post-popup__cover-wrapper t-feed__post-popup__cover-wrapper_' + e + '">', r += '<img src="' + o.mediadata + '" class="js-feed-post-image t-feed__post-popup__img t-img' + a + '"' + s + ">", r += "</div>"), "video" == o.mediatype && o.mediadata && (r += '<div class="t-feed__post-popup__cover-wrapper_video t-feed__post-popup__cover-wrapper t-feed__post-popup__cover-wrapper_' + e + '">', r += "" + t_feed_drawPostPopupVideo(o), r += "</div>"), "gallery" == o.mediatype && "" != o.mediadata && 0 < JSON.parse(o.mediadata).length && (r += '<div class="t-feed__post-popup__cover-wrapper t-feed__post-popup__cover-wrapper_' + e + '">', r += "" + t_feed_drawPostPopupGallery(t, o), r += "</div>"), r } function t_feed_drawPostPopupVideo(e) { var t = "", o = "", a = e.mediadata; -1 != a.indexOf("youtube") ? t = "youtube" : -1 != a.indexOf("vimeo") && (t = "vimeo"); var s = ""; return "youtube" == t && ((o = a.match(/youtube\.com\/watch\?v=([a-z0-9_-]{11})/i)) && 1 < o.length && (o = o[1]), s += '<iframe src="//www.youtube.com/embed/' + o + '?rel=0&fmt=18&html5=1&showinfo=0" width="100%" height="100%" frameborder="0" allowfullscreen></iframe>'), "vimeo" == t && ((o = a.match(/vimeo\.com\/([0-9]+)/i)) && 1 < o.length && (o = o[1]), s += '<iframe src="//player.vimeo.com/video/' + o + '?title=0&byline=0&portrait=0&badge=0&color=ffffff" width="100%" height="100%" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'), s } function t_feed_drawPostPopupGallery(e, t) { var o = JSON.parse(t.mediadata), a = void 0 !== e.gallery ? e.gallery.control : "", s = ""; return s += '<div class="t-slds" style="visibility: hidden;">', s += '    <div class="t-container t-slds__main">', s += '        <div class="t-slds__container t-width t-margin_auto">', s += '            <div class="t-slds__items-wrapper ' + ("dots" !== a ? " t-slds__witharrows" : "") + '" data-slider-transition="" data-slider-with-cycle="true" data-slider-correct-height="true" data-auto-correct-mobile-width="false">', o.forEach(function (t, o) { var a = 0 == o ? " t-slds__item_active" : "", r = e.popup_opts.zoom ? " t-zoomable" : "", d = e.popup_opts.zoom ? ' data-zoomable="yes" data-img-zoom-url="' + t.img + '"' : ""; if (s += '                    <div class="t-slds__item' + a + '" data-slide-index="' + (o + 1) + '">', s += '                        <div class="t-width t-margin_auto">', s += '                            <div class="t-slds__wrapper t-align_center">', void 0 === e.popup_opts.bgSize) s += '<div class="t_feed__post-popup__gallery-imgwrapper">', s += '<div class="t-slds__bgimg t-bgimg' + r + '"' + d + ' data-original="' + t.img + '" style="background-image: url(' + t_feed_getLazyUrl(e, t.img) + ');"></div>', s += '<div class="t-feed__post-popup__slider-separator" data-slider-image-width="860" data-slider-image-height="560"></div>', s += "</div>"; else { if ("cover" == e.popup_opts.bgSize || "contain" == e.popup_opts.bgSize) { var i = "contain" == e.popup_opts.bgSize ? " t-slds__bgimg-contain" : ""; s += '<div class="t_feed__post-popup__gallery-imgwrapper">', s += '<div class="t-slds__bgimg' + i + " t-bgimg" + r + '"' + d + ' data-original="' + t.img + '" style="background-image: url(' + t_feed_getLazyUrl(e, t.img) + ');"></div>', s += '<div class="t-feed__post-popup__slider-separator" data-slider-image-width="860" data-slider-image-height="560"></div>', s += "</div>" } "" == e.popup_opts.bgSize && (s += '<img class="t-slds__img t-img' + r + '"' + d + ' src="' + t.img + '">') } s += "                            </div>", s += "                        </div>", s += "                    </div>" }), s += "            </div>", "dots" !== a && (s += '                <div class="t-slds__arrow_container">', 1 != o.length && (s += "" + t_feed_drawSliderArrow(e, "left"), s += "" + t_feed_drawSliderArrow(e, "right")), s += "                </div>"), "dots" !== a && "" !== a || (s += "" + t_feed_drawSliderDots(o, e)), s += "        </div>", s += "    </div>", s += "</div>" } function t_feed_drawSliderArrow(e, t) { var o = "", a = "", s = void 0 !== e.gallery, r = ""; s && (r = e.gallery.arrowColor ? e.gallery.arrowColor : "#222222"); var d = s ? e.gallery.arrowBg : "", i = s ? e.gallery.arrowBgHover : "", p = s ? e.gallery.showBorder : "", n = s ? e.gallery.arrowSize : "", _ = s ? e.gallery.arrowBorderSize : ""; _ = "" !== _ ? parseInt(e.gallery.arrowBorderSize) : 1; var l = ""; "" !== d || "" !== i || "" !== p ? a = "sm" === n ? (o = 6, 30) : "lg" === n ? (o = 10, 50) : "xl" === n ? (o = 14, 60) : (o = 8, 40) : o = "sm" === n ? 12 : "lg" === n ? 20 : "xl" === n ? 24 : 16; var f = ""; return "" === d && "" === i && "" === p || (f += 'style="', f += "width:" + a + "px;", f += "height:" + a + "px;", "" !== p && (f += "border: " + _ + "px solid " + r + ";"), f += '"'), l += '<div class="t-slds__arrow_wrapper t-slds__arrow_wrapper-' + t + '" data-slide-direction="' + t + '">', l += '    <div class="t-slds__arrow t-slds__arrow-' + t + " " + ("" !== d || "" !== i || "" !== p ? " t-slds__arrow-withbg" : "") + '" ' + f + ">", l += '        <div class="t-slds__arrow_body t-slds__arrow_body-' + t + '" style="width: ' + (o + _) + 'px;">', l += '            <svg style="display: block" viewBox="0 0 ' + (o + 1.3 * _) + " " + (2 * o + _) + '" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">', l += '                <polyline fill="none" stroke="' + r + '" stroke-linejoin="butt" stroke-linecap="butt" stroke-width="' + _ + '" points="' + _ / 2 + "," + _ / 2 + " " + (o + _ / 2) + "," + (o + _ / 2) + " " + _ / 2 + "," + (2 * o + _ / 2) + '" />', l += "            </svg>", l += "        </div>", (l += "    </div>") + "</div>" } function t_feed_drawSliderDots(e, t) { var o = void 0 !== t.gallery, a = o ? t.gallery.dotsWidth : "8px"; 20 < (a = parseInt(a)) && (a = 20); var s = o ? t.gallery.dotsActiveBg : ""; s = "" !== s ? s : "#222222"; var r = o ? t.gallery.dotsBg : "", d = o ? t.gallery.dotsBorderSize : "", i = ""; i += "" !== a ? "width:" + a + "px;height:" + a + "px;" : "", i += "" !== r ? "background-color:" + r + ";" : "", i += "" !== d ? "border:" + d + " solid " + s + ";" : ""; var p = ""; return p += '<div class="t-slds__bullet_wrapper">', e.forEach(function (e, t) { 1 != e.length && (p += '            <div class="t-slds__bullet' + (0 == t ? " t-slds__bullet_active" : "") + '" data-slide-bullet-for="' + (t + 1) + '">', p += '                <div class="t-slds__bullet_body" style="' + i + '"></div>', p += "            </div>") }), p += "</div>" } function t_feed_setGalleryImageHeight(e) { $("#rec" + e).find(".t-feed__post-popup__slider-separator").each(function () { var e = $(this).attr("data-slider-image-width"), t = $(this).attr("data-slider-image-height") / e * 100; $(this).css("padding-bottom", t + "%") }) } function t_feed_drawPostPopupDate(e, t, o) { var a = e.popup_opts.subtitleColor ? 'style="color:' + e.popup_opts.subtitleColor + '"' : "", s = ""; return void 0 !== e.popup_opts.showDate && !e.popup_opts.showDate || (s += '<span class="t-feed__post-popup__date-wrapper">', s += '    <span class="js-feed-post-date t-feed__post-popup__date t-uptitle t-uptitle_sm" ' + a + ">" + t_feed_formateDate(t.date, e, o) + "</span>", s += "</span>"), s } function t_feed_drawPostPopupTitle(e, t) { var o = e.popup_opts.titleColor ? 'style="color:' + e.popup_opts.titleColor + '"' : "", a = ""; return t.title && (a += '<div class="t-feed__post-popup__title-wrapper">', a += '  <div class="js-feed-post-title t-feed__post-popup__title t-title t-title_xxs" ' + o + ">" + t.title + "</div>", a += "</div>"), a } function t_feed_drawPostPopupText(e, t) { var o = e.popup_opts.textColor ? 'style="color:' + e.popup_opts.textColor + '"' : "", a = ""; t.text ? a = t.text : t.descr && void 0 === t.needGetPost && (a = t.descr); var s = ""; return (a || t.needGetPost) && (s += '<div id="feed-text" class="r t-feed__post-popup__text-wrapper" data-animationappear="off">', s += '  <div class="js-feed-post-text t-feed__post-popup__text t-text t-text_md" ' + o + ">" + a + "</div>", s += "</div>"), s } function t_feed_drawPostPopupAuthor(e, t) { var o = t.authorurl ? '<a href="' + t.authorurl + '" class="t-feed__post-popup__author-link">' : "", a = t.authorurl ? "</a>" : "", s = e.popup_opts.textColor ? 'style="color:' + e.popup_opts.textColor + '"' : "", r = ""; return r += o, r += '<div class="js-feed-post-author t-feed__post-popup__author-wrapper">', t.authorimg && (r += '<div class="js-feed-post-author-image t-feed__post-popup__author-bgimg t-bgimg" data-original="' + t.authorimg + '" style="background-image:url(' + t.authorimg + ')"></div>'), t.authorname && (r += '<span class="js-feed-post-author-name t-feed__post-popup__author-name t-descr t-descr_xxs" ' + s + ">" + t.authorname + "</span>"), (r += "</div>") + a } function t_feed_addRelevantsPosts(e, t, o, a) { var s = Date.now(); $.ajax({ type: "GET", url: t_feed_createRelevantsURL(t, o, a), dataType: "text", success: function (o) { if ("" !== o) { var a = JSON.parse(o); "object" == typeof a && t_feed_addRelevantsHTML(e, t, a) } }, error: function (e) { var t = Date.now() - s; 0 == e.status && t < 100 && alert("Request error (get posts). Please check internet connection...") }, timeout: 25e3 }) } function t_feed_createRelevantsURL(e, t, o) { var a = "random", s = ""; switch (e.popup_opts.methodRelevants) { case "random": a = "random"; break; case "newest": a = "last"; break; case "pop": a = "popular"; break; case "unpop": a = "unpopular" }return "cc" == e.popup_opts.showRelevants && void 0 !== t.postparts[0] && (s = "&partuid=" + t.postparts[0].partuid), "https://feeds.tildacdn.com/api/getrelevantposts/?postuid=" + o + "&size=4&method=" + a + s } function t_feed_addRelevantsHTML(e, t, o) { var a = "", s = o.relevants; if (0 < s.length) { a += "" + t_feed_addRelevantsTitle(e, t), a += '<div class="t-feed__post-popup__relevants-wrapper">'; for (var r = 0; r < s.length; r++) { var d = s[r]; "cols" == t.popup_opts.styleRelevants ? a += "" + t_feed_drawRelevantsPostInCol(t, d) : a += "" + t_feed_drawRelevantsPostInRow(t, d) } a += "</div>" } $(".js-feed-relevants").append(a) } function t_feed_addRelevantsTitle(e, t) { var o = t.popup_opts.titleColor ? ' style="color:' + t.popup_opts.titleColor + '";' : "", a = ""; return a += '    <div class="t-feed__post-popup__relevants-title-wrapper t-col' + ("cols" == t.popup_opts.styleRelevants ? " t-col_12" : " t-col_8 t-prefix t-prefix_2") + '">', (a += '        <div class="t-feed__post-popup__relevants-title t-align_left t-uptitle t-uptitle_xxl"' + o + ">" + (t.popup_opts.titleRelevants ? t.popup_opts.titleRelevants : t_feed_getDictionary("seealso", e)) + "</div>") + "    </div>" } function t_feed_drawRelevantsPostInRow(e, t) { var o = ""; return o += '<div class="t-feed__post-popup__relevants-item-wrapper">', o += '    <div class="t-feed__post-popup__relevants-item t-feed__post-popup__relevants-item_row t-col t-col_8 t-prefix t-prefix_2 t-align_left">', o += '        <a class="" href="' + t.url + '">', o += '            <div class="t-feed__post-popup__relevants-content">', o += "" + t_feed_drawRelevantsPostContent(e, t), o += "            </div>", o += "        </a>", (o += "    </div>") + "</div>" } function t_feed_drawRelevantsPostInCol(e, t) { var o = ""; return o += '<div class="t-feed__post-popup__relevants-item t-col t-col_3 t-align_left">', o += '    <a class="" href="' + t.url + '">', o += "" + t_feed_drawRelevantsPostContent(e, t), (o += "    </a>") + "</div>" } function t_feed_drawRelevantsPostContent(e, t) { var o = e.popup_opts.titleColor ? ' style="color:' + e.popup_opts.titleColor + '";' : "", a = e.popup_opts.textColor ? ' style="color:' + e.popup_opts.textColor + '";' : "", s = e.popup_opts.subtitleColor ? ' style="color:' + e.popup_opts.subtitleColor + '";' : "", r = ""; return t.image && (r += '<div class="t-feed__post-popup__relevants-imgwrapper">', r += '    <div class="t-feed__post-popup__relevants-bgimg t-bgimg" data-original="' + t.image + '" style="background-image: url(' + t.image + ');"></div>', r += "</div>"), r += '<div class="t-feed__post-popup__relevants-textwrapper">', r += '    <div class="t-feed__post-popup__relevants-parts" style="">', t.postparts.forEach(function (e) { "" != e && (r += '        <span class="t-feed__post-popup__relevants-item-tag t-uptitle t-uptitle_xs"' + s + ">" + e.parttitle + "</span>") }), r += "    </div>", t.title && (r += '    <div class="t-feed__post-popup__relevants-item-title t-name t-name_xs"' + o + ">" + t.title + "</div>"), t.descr && (r += '    <div class="t-feed__post-popup__relevants-item-descr t-descr t-descr_xxs"' + a + ">" + t.descr + "</div>"), r += "</div>" } function t_feed_drawPostPopupArrowTop(e) { var t = e.arrowtop_opts.color ? 'style="fill: ' + e.arrowtop_opts.color + ';"' : "", o = e.arrowtop_opts.bottom ? e.arrowtop_opts.bottom : "20px", a = "left:20px;"; e.arrowtop_opts.left && (a = "left:" + e.arrowtop_opts.left + ";"), e.arrowtop_opts.right && (a = "right:" + e.arrowtop_opts.right + ";"); var s = ""; switch (s += '<div class="t-feed__post-popup__arrow-top" style="position:fixed;z-index:1;bottom:' + o + ";" + a + 'min-height:30px;">', +e.arrowtop_opts.style) { case 2: s += '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 48 48">', s += "    <path " + t + ' d="M24 3.125c11.511 0 20.875 9.364 20.875 20.875S35.511 44.875 24 44.875 3.125 35.511 3.125 24 12.489 3.125 24 3.125m0-3C10.814.125.125 10.814.125 24S10.814 47.875 24 47.875 47.875 37.186 47.875 24 37.186.125 24 .125z"/>', s += "    <path " + t + ' d="M25.5 36.033a1.5 1.5 0 11-3 0V16.87l-7.028 7.061a1.497 1.497 0 01-2.121.005 1.5 1.5 0 01-.005-2.121l9.591-9.637A1.498 1.498 0 0124 11.736h.001c.399 0 .783.16 1.063.443l9.562 9.637a1.5 1.5 0 01-2.129 2.114l-6.994-7.049-.003 19.152z"/>', s += "</svg>"; break; case 3: s += '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 48 48">', s += "    <path " + t + ' d="M43.006 47.529H4.964a4.805 4.805 0 01-4.791-4.791V4.697A4.805 4.805 0 014.964-.094h38.042a4.805 4.805 0 014.791 4.791v38.042a4.805 4.805 0 01-4.791 4.79zM25.503 16.881l6.994 7.049a1.5 1.5 0 102.129-2.114l-9.562-9.637a1.5 1.5 0 00-1.063-.443H24c-.399 0-.782.159-1.063.442l-9.591 9.637a1.5 1.5 0 102.126 2.116L22.5 16.87v19.163a1.5 1.5 0 103 0l.003-19.152z"/>', s += "</svg>"; break; case 1: default: s += '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 48 48">', s += "    <path " + t + ' d="M47.875 24c0 13.186-10.689 23.875-23.875 23.875S.125 37.186.125 24 10.814.125 24 .125 47.875 10.814 47.875 24zm-22.372-7.119l6.994 7.049a1.5 1.5 0 102.129-2.114l-9.562-9.637a1.5 1.5 0 00-1.063-.443H24c-.399 0-.782.159-1.063.442l-9.591 9.637a1.5 1.5 0 102.126 2.116L22.5 16.87v19.163a1.5 1.5 0 103 0l.003-19.152z"/>', s += "</svg>" }return s + "</div>" } function t_feed_drawEmptyMessage(e, t) { var o = ""; return o += '<div class="js-feed-error-msg t-feed__error-msg-cont t-col t-col_12">', o += '  <div class="t-feed__error-msg-wrapper t-descr t-descr_sm" style="' + (e.typo.titleColor ? "color:" + e.typo.titleColor + ";border-color:" + e.typo.titleColor + ";" : "") + '">', o += '    <div class="t-feed__error-msg">', o += "" + t_feed_getDictionary("emptypartmsg", t), o += "    </div>", (o += "  </div>") + "</div>" } function t_feed_drawErrorBox(e, t) { var o = ""; return o += '<div class="js-feed-error-msg t-feed__error-msg-cont t-col t-col_12">', o += '  <div class="t-feed__error-msg-wrapper t-descr t-descr_sm" style="' + (e.typo.titleColor ? "color:" + e.typo.titleColor + ";border-color:" + e.typo.titleColor + ";" : "") + '">', o += '    <div class="t-feed__error-msg">', o += "" + t, o += "    </div>", (o += "  </div>") + "</div>" } function t_feed_formateDate(e, t, o) { var a = e.split(" ")[0], s = e.split(" ")[1], r = a.split("-"), d = new Date(r[0], r[1] - 1, r[2]), i = 1 == +t.timeFormat ? " " + s : "", p = d.getMonth(), n = r[2], _ = r[1], l = r[0], f = t_feed_getDictionary(["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"][p], o); switch (+t.dateFormat) { case 1: return _ + "-" + n + "-" + l + i; case 2: return n + "-" + _ + "-" + l + i; case 3: return n + "/" + _ + "/" + l + i; case 4: return n + "." + _ + "." + l + i; case 5: return f[0] + " " + n + ", " + l + i; case 6: return n + " " + f[1] + " " + l + i; default: return t_feed_addDefaultDate(o, r, e, f, i) } } function t_feed_addDefaultDate(e, t, o, a, s) { var r = t_feed_returnLang(e), d = new Date, i = d - Date.parse(o), p = Math.floor(i / 864e5), n = t_feed_getDictionary("ago", e), _ = ("RU" == r || "UK" == r) && 4 < p ? t_feed_getDictionary("days", e)[1] : t_feed_getDictionary("days", e)[0], l = d.getFullYear(), f = +o.split("-")[0], c = "JA" == r || "CN" == r ? "" : " ", u = f != l ? f : "", w = ""; return 0 == p && (w = t_feed_getDictionary("today", e)), 1 == p && (w = t_feed_getDictionary("yesterday", e)), 1 < p && p < 15 && (w = "FR" == r || "DE" == r || "ES" == r || "PT" == r ? n + c + p + c + _ : p + c + _ + c + n), (15 <= p || l < f) && (w = t_feed_addFullDate(r, t[2], a, u) + s), w } function t_feed_addFullDate(e, t, o, a) { var s = "DE" == e ? ". " : " ", r = " "; "EN" == e ? r = "" != a ? ", " : "" : "ES" != e && "PT" != e || (r = "" != a ? " de " : ""); var d = o[1]; return "EN" != e && "DE" != e || (d = o[0]), "EN" == e ? d + " " + t + r + a : "JA" == e || "CN" == e ? a + d + t : t + s + d + r + a } function t_feed_getDictionary(e, t) { var o = []; o.emptypartmsg = { EN: "Nothing found", RU: "Ничего не найдено", FR: "Rien trouvé", DE: "Nichts gefunden", ES: "Nada encontrado", PT: "Nada encontrado", UK: "Нічого не знайдено", JA: "何も見つかりませんでした", CN: "什么都没找到" }, o.all = { EN: "All", RU: "Все", FR: "Tout", DE: "Alles", ES: "Todos", PT: "Todos", UK: "Всі", JA: "すべて", CN: "所有" }, o.seealso = { EN: "See also", RU: "Смотрите также", FR: "Voir également", DE: "Siehe auch", ES: "Ver también", PT: "Veja também", UK: "Дивись також", JA: "また見なさい", CN: "也可以看看" }, o.today = { EN: "Today", RU: "Сегодня", FR: "Aujourd'hui", DE: "Heute", ES: "Hoy", PT: "Hoje", UK: "Сьогодні", JA: "今日", CN: "今天" }, o.yesterday = { EN: "Yesterday", RU: "Вчера", FR: "Hier", DE: "Gestern", ES: "Ayer", PT: "Ontem", UK: "Вчора", JA: "昨日", CN: "昨天" }, o.days = { EN: ["days"], RU: ["дня", "дней"], FR: ["jours"], DE: ["tagen"], ES: ["dias"], PT: ["dias"], UK: ["дні", "днів"], JA: ["日"], CN: ["天"] }, o.ago = { EN: "ago", RU: "назад", FR: "Il y a", DE: "Vor", ES: "Hace", PT: "Há", UK: "тому", JA: "前", CN: "前" }, o.january = { EN: ["January", "january"], RU: ["Январь", "января"], FR: ["Janvier", "janvier"], DE: ["Januar", "januar"], ES: ["Enero", "de enero"], PT: ["Janeiro", "de janeiro"], UK: ["Січень", "січня"], JA: ["一月", "一月"], CN: ["一月", "一月"] }, o.february = { EN: ["February", "february"], RU: ["Февраль", "февраля"], FR: ["Février", "février"], DE: ["Februar", "februar"], ES: ["Febrero", "de febrero"], PT: ["Fevereiro", "de fevereiro"], UK: ["Лютий", "лютого"], JA: ["二月", "二月"], CN: ["二月", "二月"] }, o.march = { EN: ["March", "March"], RU: ["Март", "марта"], FR: ["Mars", "mars"], DE: ["März", "märz"], ES: ["Marzo", "de marzo"], PT: ["Março", "de março"], UK: ["Березень", "березня"], JA: ["三月", "三月"], CN: ["三月", "三月"] }, o.april = { EN: ["April", "april"], RU: ["Апрель", "апреля"], FR: ["Avril", "avril"], DE: ["April", "april"], ES: ["Abril", "de abril"], PT: ["Abril", "de abril"], UK: ["Квітень", "квітня"], JA: ["四月", "四月"], CN: ["四月", "四月"] }, o.may = { EN: ["May", "may"], RU: ["Май", "мая"], FR: ["Mai", "mai"], DE: ["Kann", "kann"], ES: ["Mayo", "de mayo"], PT: ["Maio", "de maio"], UK: ["Травень", "травня"], JA: ["五月", "五月"], CN: ["五月", "五月"] }, o.june = { EN: ["June", "june"], RU: ["Июнь", "июня"], FR: ["Juin", "juin"], DE: ["Juni", "juni"], ES: ["Junio", "de junio"], PT: ["Junho", "de junho"], UK: ["Червень", "червня"], JA: ["六月", "六月"], CN: ["六月", "六月"] }, o.july = { EN: ["July", "july"], RU: ["Июль", "июля"], FR: ["Juillet", "juillet"], DE: ["Juli", "Juli"], ES: ["Julio", "de julio"], PT: ["Julho", "de julho"], UK: ["Липень", "липня"], JA: ["七月", "七月"], CN: ["七月", "七月"] }, o.august = { EN: ["August", "august"], RU: ["Август", "августа"], FR: ["Août", "août"], DE: ["August", "august"], ES: ["Agosto", "de agosto"], PT: ["Agosto", "de agosto"], UK: ["Серпень", "серпня"], JA: ["八月", "八月"], CN: ["八月", "八月"] }, o.september = { EN: ["September", "september"], RU: ["Сентябрь", "сентября"], FR: ["Septembre", "septembre"], DE: ["September", "september"], ES: ["Septiembre", "de septiembre"], PT: ["Setembro", "de setembro"], UK: ["Вересень", "вересня"], JA: ["九月", "九月"], CN: ["九月", "九月"] }, o.october = { EN: ["October", "october"], RU: ["Октябрь", "октября"], FR: ["Octobre", "octobre"], DE: ["Oktober", "oktober"], ES: ["Octubre", "de octubre"], PT: ["Outubro", "de outubro"], UK: ["Жовтень", "жовтня"], JA: ["十月", "十月"], CN: ["十月", "十月"] }, o.november = { EN: ["November", "november"], RU: ["Ноябрь", "ноября"], FR: ["Novembre", "novembre"], DE: ["November", "november"], ES: ["Noviembre", "de noviembre"], PT: ["Novembro", "de novembro"], UK: ["Листопад", "листопада"], JA: ["十一月", "十一月"], CN: ["十一月", "十一月"] }, o.december = { EN: ["December", "december"], RU: ["Декабрь", "декабря"], FR: ["Décembre", "décembre"], DE: ["Dezember", "dezember"], ES: ["Diciembre", "de diciembre"], PT: ["Dezembro", "de dezembro"], UK: ["Грудень", "грудня"], JA: ["十二月", "十二月"], CN: ["十二月", "十二月"] }; var a = t_feed_returnLang(t); if (null != typeof o[e]) return void 0 !== o[e][a] && "" != o[e][a] ? o[e][a] : o[e].EN } function t_feed_returnLang(e) { return t_feed_defineUserLang(), void 0 !== window.tFeedPosts[e] && "" != window.tFeedPosts[e].lang ? window.tFeedPosts[e].lang.toUpperCase() : window.tildaBrowserLang } function t_feed_defineUserLang() { window.tildaBrowserLang = window.navigator.userLanguage || window.navigator.language, window.tildaBrowserLang = window.tildaBrowserLang.toUpperCase(), -1 != window.tildaBrowserLang.indexOf("RU") ? window.tildaBrowserLang = "RU" : -1 != window.tildaBrowserLang.indexOf("FR") ? window.tildaBrowserLang = "FR" : -1 != window.tildaBrowserLang.indexOf("DE") ? window.tildaBrowserLang = "DE" : -1 != window.tildaBrowserLang.indexOf("ES") ? window.tildaBrowserLang = "ES" : -1 != window.tildaBrowserLang.indexOf("PT") ? window.tildaBrowserLang = "PT" : -1 != window.tildaBrowserLang.indexOf("UK") ? window.tildaBrowserLang = "UK" : -1 != window.tildaBrowserLang.indexOf("JA") ? window.tildaBrowserLang = "JA" : -1 != window.tildaBrowserLang.indexOf("CN") ? window.tildaBrowserLang = "CN" : window.tildaBrowserLang = "EN" }